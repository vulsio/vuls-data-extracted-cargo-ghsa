{
	"id": "GHSA-9c9f-7x9p-4wqp",
	"advisories": [
		{
			"id": "GHSA-9c9f-7x9p-4wqp",
			"title": "A malicious coder can get unsound access to TCell or TLCell memory",
			"description": "This is impossible to do by accident, but by carefully constructing\nmarker types to be covariant, a malicious coder can cheat the\nsingleton check in `TCellOwner` and `TLCellOwner`, giving unsound\naccess to cell memory.  This could take the form of getting two\nmutable references to the same memory, or a mutable reference and an\nimmutable reference.\n\nThe fix is for the crate to internally force the marker type to be\ninvariant.  This blocks the conversion between covariant types which\nRust normally allows.\n",
			"severity": [
				{
					"type": "vendor",
					"source": "github.com/advisories",
					"vendor": "HIGH"
				}
			],
			"references": [
				{
					"source": "github.com/advisories",
					"url": "https://github.com/uazu/qcell/issues/20"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/uazu/qcell"
				},
				{
					"source": "github.com/advisories",
					"url": "https://rustsec.org/advisories/RUSTSEC-2022-0007.html"
				}
			],
			"published": "2022-06-17T00:16:11Z",
			"modified": "2022-06-17T00:16:11Z",
			"optional": {
				"github_reviewed": true
			}
		}
	],
	"detection": [
		{
			"ecosystem": "cargo",
			"vulnerable": true,
			"package": {
				"name": "qcell"
			},
			"affected": {
				"type": "semver",
				"range": [
					{
						"lt": "0.4.3"
					}
				],
				"fixed": [
					"0.4.3"
				]
			}
		}
	],
	"data_source": "cargo-ghsa"
}
