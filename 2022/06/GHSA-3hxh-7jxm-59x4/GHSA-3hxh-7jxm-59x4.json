{
	"id": "GHSA-3hxh-7jxm-59x4",
	"advisories": [
		{
			"id": "GHSA-3hxh-7jxm-59x4",
			"title": "AtomicBucket<T> unconditionally implements Send/Sync",
			"description": "In the affected versions of the crate, `AtomicBucket<T>` unconditionally implements `Send`/`Sync` traits. Therefore, users can create a data race to the inner\n`T: !Sync` by using the `AtomicBucket::data_with()` API.\nSuch data races can potentially cause memory corruption or other undefined behavior.\n\nThe flaw was fixed in commit 8e6daab by adding appropriate Send/Sync bounds to the Send/Sync impl of struct `Block<T>` (which is a data type contained inside `AtomicBucket<T>`).\n",
			"severity": [
				{
					"type": "vendor",
					"source": "github.com/advisories",
					"vendor": "MODERATE"
				}
			],
			"references": [
				{
					"source": "github.com/advisories",
					"url": "https://github.com/metrics-rs/metrics/issues/190"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/metrics-rs/metrics"
				},
				{
					"source": "github.com/advisories",
					"url": "https://rustsec.org/advisories/RUSTSEC-2021-0113.html"
				}
			],
			"published": "2022-06-17T00:13:03Z",
			"modified": "2022-06-17T00:13:03Z",
			"optional": {
				"github_reviewed": true
			}
		}
	],
	"detection": [
		{
			"ecosystem": "cargo",
			"vulnerable": true,
			"package": {
				"name": "metrics-util"
			},
			"affected": {
				"type": "semver",
				"range": [
					{
						"lt": "0.7.0"
					}
				],
				"fixed": [
					"0.7.0"
				]
			}
		}
	],
	"data_source": "cargo-ghsa"
}
