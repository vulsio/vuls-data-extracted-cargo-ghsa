{
	"id": "GHSA-ghc8-5cgm-5rpf",
	"advisories": [
		{
			"id": "GHSA-ghc8-5cgm-5rpf",
			"title": "Inventory fails to prohibit standard library access prior to initialization of Rust standard library runtime",
			"description": "Affected versions allow arbitrary caller-provided code to execute before the lifetime of `main`.\n\nIf the caller-provided code accesses particular pieces of the standard library that require an initialized Rust runtime, such as `std::io` or `std::thread`, these may not behave as documented. Panics are likely; UB is possible.\n\nThe flaw was corrected by enforcing that only code written within the `inventory` crate, which is guaranteed not to access runtime-dependent parts of the standard library, runs before `main`. Caller-provided code is restricted to running at compile time.\n",
			"severity": [
				{
					"type": "vendor",
					"source": "github.com/advisories",
					"vendor": "MODERATE"
				}
			],
			"references": [
				{
					"source": "github.com/advisories",
					"url": "https://github.com/dtolnay/inventory/pull/43"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/dtolnay/inventory/commit/b853350a3800e38d2cb9950355b80bc8b8d3959c"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/dtolnay/inventory"
				},
				{
					"source": "github.com/advisories",
					"url": "https://rustsec.org/advisories/RUSTSEC-2023-0057.html"
				}
			],
			"published": "2023-09-11T20:43:17Z",
			"modified": "2023-09-11T20:43:17Z",
			"optional": {
				"github_reviewed": true
			}
		}
	],
	"detection": [
		{
			"ecosystem": "cargo",
			"vulnerable": true,
			"package": {
				"name": "inventory"
			},
			"affected": {
				"type": "semver",
				"range": [
					{
						"lt": "0.2.0"
					}
				],
				"fixed": [
					"0.2.0"
				]
			}
		}
	],
	"data_source": "cargo-ghsa"
}
