{
	"id": "GHSA-vj88-5667-w56p",
	"advisories": [
		{
			"id": "GHSA-vj88-5667-w56p",
			"title": "Singleton lacks bounds on Send and Sync.",
			"description": "`Singleton<T>` is meant to be a static object that can be initialized lazily. In\norder to satisfy the requirement that `static` items must implement `Sync`,\n`Singleton` implemented both `Sync` and `Send` unconditionally.\n\nThis allows for a bug where non-`Sync` types such as `Cell` can be used in\nsingletons and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `b0d2bd20e` by adding trait bounds, requiring\nthe contaiend type to implement `Sync`.\n",
			"severity": [
				{
					"type": "vendor",
					"source": "github.com/advisories",
					"vendor": "MODERATE"
				}
			],
			"references": [
				{
					"source": "github.com/advisories",
					"url": "https://github.com/RusPiRo/ruspiro-singleton/issues/10"
				},
				{
					"source": "github.com/advisories",
					"url": "https://github.com/RusPiRo/ruspiro-singleton"
				},
				{
					"source": "github.com/advisories",
					"url": "https://rustsec.org/advisories/RUSTSEC-2020-0115.html"
				}
			],
			"published": "2021-08-25T21:00:11Z",
			"modified": "2021-08-24T17:44:58Z",
			"optional": {
				"github_reviewed": true
			}
		}
	],
	"detection": [
		{
			"ecosystem": "cargo",
			"vulnerable": true,
			"package": {
				"name": "ruspiro-singleton"
			},
			"affected": {
				"type": "semver",
				"range": [
					{
						"lt": "0.4.1"
					}
				],
				"fixed": [
					"0.4.1"
				]
			}
		}
	],
	"data_source": "cargo-ghsa"
}
